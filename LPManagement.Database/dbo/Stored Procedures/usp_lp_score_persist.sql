DROP PROCEDURE [dbo].[usp_lp_score_persist]
GO

CREATE PROCEDURE [dbo].[usp_lp_score_persist]
	@employee_score_data [dbo].[lp_score_type] readonly
AS
	MERGE [dbo].[lp_score] targetTable  
	USING
	(
		SELECT
			[employee_id]
			,[faculty]
			,[unix]
			,[software_engineering_and_uml]
			,[oracle_SQL_and_PL_SQL]
			,[dot_net]
			,[core_java]
			,[advance_java]
			,[J2EE]
			,[hibernate]
			,[spring]
			,[html]
			,[java_script]
			,[informatica]
			,[talent_development]
			,[manual_testing]
			,[UFT]
			,[selenium]
			,[OOPS]
			,[RDBMS]
			,[final_exam]
			,[overall_score]
			,[project_score]
			,[project_reviewer]
			,[overall_feedback]
			,[faculty_feedback]
			,[remarks]
		FROM @employee_score_data
	) sourceTable  
	ON 
	(
		[sourceTable].[employee_id] = [targetTable].[employee_id] 
	)
	WHEN MATCHED THEN    
	UPDATE SET  
		[targetTable].[faculty] = [sourceTable].[faculty] 
		,[targetTable].[unix] = [sourceTable].[unix] 
		,[targetTable].[software_engineering_and_uml] = [sourceTable].[software_engineering_and_uml] 
		,[targetTable].[oracle_SQL_and_PL_SQL] = [sourceTable].[oracle_SQL_and_PL_SQL] 
		,[targetTable].[dot_net] = [sourceTable].[dot_net] 
		,[targetTable].[core_java] = [sourceTable].[core_java] 
		,[targetTable].[advance_java] = [sourceTable].[advance_java] 
		,[targetTable].[J2EE] = [sourceTable].[J2EE] 
		,[targetTable].[hibernate] = [sourceTable].[hibernate] 
		,[targetTable].[spring] = [sourceTable].[spring] 
		,[targetTable].[html] = [sourceTable].[html] 
		,[targetTable].[java_script] = [sourceTable].[java_script] 
		,[targetTable].[informatica] = [sourceTable].[informatica] 
		,[targetTable].[talent_development] = [sourceTable].[talent_development] 
		,[targetTable].[manual_testing] = [sourceTable].[manual_testing] 
		,[targetTable].[UFT] = [sourceTable].[UFT] 
		,[targetTable].[selenium] = [sourceTable].[selenium] 
		,[targetTable].[OOPS] = [sourceTable].[OOPS] 
		,[targetTable].[RDBMS] = [sourceTable].[RDBMS] 
		,[targetTable].[final_exam] = [sourceTable].[final_exam] 
		,[targetTable].[overall_score] = [sourceTable].[overall_score] 
		,[targetTable].[project_score] = [sourceTable].[project_score] 
		,[targetTable].[project_reviewer] = [sourceTable].[project_reviewer] 
		,[targetTable].[overall_feedback] = [sourceTable].[overall_feedback] 
		,[targetTable].[faculty_feedback] = [sourceTable].[faculty_feedback]
		,[targetTable].[remarks] = [sourceTable].[remarks]
	WHEN NOT MATCHED THEN  
	INSERT
	(
		[employee_id]
		,[faculty]
		,[unix]
		,[software_engineering_and_uml]
		,[oracle_SQL_and_PL_SQL]
		,[dot_net]
		,[core_java]
		,[advance_java]
		,[J2EE]
		,[hibernate]
		,[spring]
		,[html]
		,[java_script]
		,[informatica]
		,[talent_development]
		,[manual_testing]
		,[UFT]
		,[selenium]
		,[OOPS]
		,[RDBMS]
		,[final_exam]
		,[overall_score]
		,[project_score]
		,[project_reviewer]
		,[overall_feedback]
		,[faculty_feedback]
		,[remarks]
	)
	VALUES
	(		
		[sourceTable].[employee_id]
		,[sourceTable].[faculty]
		,[sourceTable].[unix]
		,[sourceTable].[software_engineering_and_uml]
		,[sourceTable].[oracle_SQL_and_PL_SQL]
		,[sourceTable].[dot_net]
		,[sourceTable].[core_java]
		,[sourceTable].[advance_java]
		,[sourceTable].[J2EE]
		,[sourceTable].[hibernate]
		,[sourceTable].[spring]
		,[sourceTable].[html]
		,[sourceTable].[java_script]
		,[sourceTable].[informatica]
		,[sourceTable].[talent_development]
		,[sourceTable].[manual_testing]
		,[sourceTable].[UFT]
		,[sourceTable].[selenium]
		,[sourceTable].[OOPS]
		,[sourceTable].[RDBMS]
		,[sourceTable].[final_exam]
		,[sourceTable].[overall_score]
		,[sourceTable].[project_score]
		,[sourceTable].[project_reviewer]
		,[sourceTable].[overall_feedback]
		,[sourceTable].[faculty_feedback]
		,[sourceTable].[remarks]
	);